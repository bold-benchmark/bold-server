PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX ssn: <http://www.w3.org/ns/ssn/>
PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX time: <http://www.w3.org/2006/time#>
PREFIX qudt: <http://qudt.org/schema/qudt#>
PREFIX brick: <http://buildsys.org/ontologies/Brick#>
PREFIX bf: <http://buildsys.org/ontologies/BrickFrame#>
PREFIX sim: <http://ti.rw.fau.de/sim#>

# occupancy sensor gets updated if move action

DELETE {
    GRAPH ?fromGraph { ?fromOccupancy rdf:value ?fromState }
    GRAPH ?toGraph { ?toOccupancy rdf:value ?toState }
} INSERT {
    GRAPH ?fromGraph { ?fromOccupancy rdf:value "off" }
    GRAPH ?toGraph { ?toOccupancy rdf:value "on" }
} WHERE {
    <sim> sim:currentIteration ?time .

    # TODO delete action when done?
    ?action a sim:MoveAction ;
            sim:agent ?occupant ;
            sim:fromLocation ?from ;
            sim:toLocation ?to ;
            sim:atTime ?time .

    OPTIONAL {
        ?from bf:hasPoint ?fromSensor .
        ?fromSensor a brick:Occupancy_Sensor ; sosa:observes ?fromOccupancy .
        ?fromOccupancy rdf:value ?fromState ;
                       foaf:isPrimaryTopicOf ?fromGraph .
    }

    OPTIONAL {
        ?to bf:hasPoint ?toSensor .
        ?toSensor a brick:Occupancy_Sensor ; sosa:observes ?toOccupancy .
        ?toOccupancy rdf:value ?toState ;
                     foaf:isPrimaryTopicOf ?toGraph .
    }
};

# switch status gets updated (light, appliance)

DELETE {
    GRAPH ?g { ?lighting rdf:value ?oldState }
} INSERT {
    GRAPH ?g { ?lighting rdf:value ?state }
} WHERE {
    <sim> sim:currentIteration ?time .

    # TODO delete action when done?
    ?action a sim:SwitchAction ;
            sim:agent ?occupant ;
            sim:object ?switch ;
            sim:location ?loc ;
            sim:atTime ?time ;
            sim:result ?state .

    ?switch ssn:hasProperty ?lighting .
    ?lighting rdf:value ?oldState ;
              foaf:isPrimaryTopicOf ?g .
};

# outside illuminance gets updated (by sunlight)

DELETE {
    GRAPH ?g { ?illuminance qudt:numericValue ?oldVal }
} INSERT {
    GRAPH ?g { ?illuminance qudt:numericValue ?val }
} WHERE {
    # reference: illuminance values at https://en.wikipedia.org/wiki/Lux

    ?sim sim:currentTime ?userTime ;
         sim:sunriseTime ?sunriseTime ;
         sim:sunsetTime ?sunsetTime .

    ?userTime time:inXSDDateTimeStamp ?timestamp .
    ?sunriseTime time:inXSDDateTimeStamp ?sunriseTimestamp .
    ?sunsetTime time:inXSDDateTimeStamp ?sunsetTimestamp .

    ?sensor a brick:Outside_Luminance_Sensor ;
            sosa:observes ?illuminance .
    ?illuminance qudt:numericValue ?oldVal ;
                 foaf:isPrimaryTopicOf ?g .

	# square function to simulate the sun's rotation from sunrise until sunset
	# ?max * (1 - ((?time - ?zenith) / ?zenith)^2)

	BIND (sim:inUnixTimeStamp(?sunriseTimestamp) AS ?sunrise)
	BIND (sim:inUnixTimeStamp(?sunsetTimestamp) AS ?sunset)

	BIND (sim:inUnixTimeStamp(?timestamp) - ?sunrise AS ?time)
	BIND ((?sunset - ?sunrise) / 2 AS ?zenith)

	BIND (40000 as ?max)
    BIND (if(?time < 0 || ?time > (2 * ?zenith), 0,
          ?max * (1 - ((?time - ?zenith) / ?zenith) * ((?time - ?zenith) / ?zenith)))
          AS ?base)

    ?stimulus a sim:CloudCoverageStimulus ;
              sim:startCoverage ?start ;
              sim:endCoverage ?end .

	# linear regression between 2 reference points
	# TODO more reference points between the 2, then piecewise regression

    BIND (?start + ?time * (?end - ?start) / (?zenith * 2) AS ?cloudCover)

    BIND (?base * ?cloudCover AS ?val)

    # FIXME bug in rdf4j: if identical value, triple deleted but not inserted?
    FILTER (?val != ?oldVal)
};

# room illuminance gets updated (by sunlight)

DELETE {
    GRAPH ?g { ?illuminance qudt:numericValue ?oldVal }
} INSERT {
    GRAPH ?g { ?illuminance qudt:numericValue ?val }
} WHERE {
    # reference: illuminance values at https://en.wikipedia.org/wiki/Lux

	# TODO do calculation once, in init phase

    ?sim sim:currentTime ?userTime ;
         sim:sunriseTime ?sunriseTime ;
         sim:sunsetTime ?sunsetTime .

    ?userTime time:inXSDDateTimeStamp ?timestamp .
    ?sunriseTime time:inXSDDateTimeStamp ?sunriseTimestamp .
    ?sunsetTime time:inXSDDateTimeStamp ?sunsetTimestamp .

	BIND (sim:inUnixTimeStamp(?sunriseTimestamp) AS ?sunrise)
	BIND (sim:inUnixTimeStamp(?sunsetTimestamp) AS ?sunset)

	BIND (sim:inUnixTimeStamp(?timestamp) - ?sunrise AS ?time)
	BIND ((?sunset - ?sunrise) / 2 AS ?zenith)

    ?outsideSensor a brick:Outside_Luminance_Sensor ;
                   sosa:observes ?outsideIlluminance .
    ?outsideIlluminance qudt:numericValue ?outsideVal .

    ?sensor a brick:Luminance_Sensor ;
            bf:isLocatedIn ?room ;
            sosa:observes ?illuminance .
    ?illuminance qudt:numericValue ?oldVal ;
                 foaf:isPrimaryTopicOf ?g .
    ?room a brick:Room ;
          sim:orientation ?orientation .

	BIND (5000 / 40000 as ?factor)
    BIND (?outsideVal * ?factor AS ?base)

    # effect of room's orientation towards the sun: from 1 to 0 if east, 0 to 1 if west.

    BIND (if(?orientation = sim:east,
          1 - ?time / (?zenith * 2),
          ?time / (?zenith * 2))
          AS ?orientationFactor)

    ?room sim:occlusionFactor ?occlusionFactor .

    BIND (?base * ?orientationFactor * ?occlusionFactor AS ?val)

    # FIXME bug in rdf4j: if identical value, triple deleted but not inserted?
    FILTER (?val != ?oldVal)
};

# room illuminance gets updated (by lighting system)

DELETE {
    GRAPH ?g { ?illuminance qudt:numericValue ?oldVal }
} INSERT {
    GRAPH ?g { ?illuminance qudt:numericValue ?val }
} WHERE {
    # reference: illuminance values at https://en.wikipedia.org/wiki/Lux

    ?sensor a brick:Luminance_Sensor ;
            bf:isLocatedIn ?room ;
            sosa:observes ?illuminance .
    ?illuminance qudt:numericValue ?oldVal ;
                 foaf:isPrimaryTopicOf ?g .
    ?room a brick:Room .

	{
		SELECT (count(*) AS ?count) ?sensor WHERE {
			?cmd a brick:Luminance_Command ;
				 sim:influences ?sensor ;
				 sosa:actsOnProperty ?lighting .
			?lighting rdf:value "on" .
		} GROUP BY ?sensor
	}

	# 500 lumen to 10 lux (<=> incident surface 4.pi.r2=~50m2, sphere of radius r=2m)
	# TODO not consistent with 50-80 lux for artificial light in houses; 100lx as arbitrary value

    BIND (?oldVal + (?count * 100) AS ?val)

    # FIXME bug in rdf4j: if identical value, triple deleted but not inserted?
    FILTER (?val != ?oldVal)
}

# electric consumption gets updated

# thermostat gets updated (stateful update)

# temperature gets updated through the action of radiators